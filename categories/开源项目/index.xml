<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>开源项目 on Carlos的废话集</title>
    <link>https://carlos19960601.github.io/categories/%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE/</link>
    <description>Recent content in 开源项目 on Carlos的废话集</description>
    <generator>Hugo</generator>
    <language>cn</language>
    <lastBuildDate>Tue, 20 Aug 2024 10:04:54 +0800</lastBuildDate>
    <atom:link href="https://carlos19960601.github.io/categories/%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>开源项目学习推荐</title>
      <link>https://carlos19960601.github.io/posts/%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE%E5%AD%A6%E4%B9%A0%E6%8E%A8%E8%8D%90/</link>
      <pubDate>Tue, 20 Aug 2024 10:04:54 +0800</pubDate>
      <guid>https://carlos19960601.github.io/posts/%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE%E5%AD%A6%E4%B9%A0%E6%8E%A8%E8%8D%90/</guid>
      <description>&lt;h1 id=&#34;桌面客户端&#34;&gt;桌面客户端&lt;/h1&gt;&#xA;&lt;h2 id=&#34;taurihttpstauriapp&#34;&gt;&lt;a href=&#34;https://tauri.app/&#34;&gt;tauri&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;p&gt;tauri 后端使用&lt;code&gt;rust&lt;/code&gt;。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/clash-verge-rev/clash-verge-rev&#34;&gt;clash-verge-rev&lt;/a&gt;: 基于Mihomo内核的翻墙客户端GUI&#xA;&lt;ul&gt;&#xA;&lt;li&gt;rust system-proxy的实现&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;electronhttpswwwelectronforgeio&#34;&gt;&lt;a href=&#34;https://www.electronforge.io/&#34;&gt;Electron&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;p&gt;Electron 后端使用&lt;code&gt;node&lt;/code&gt;。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/ZuodaoTech/everyone-can-use-english&#34;&gt;everyone-can-use-english&lt;/a&gt;: 英语学习软件&#xA;&lt;ul&gt;&#xA;&lt;li&gt;项目结构清晰，可以参考学习&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/pompurin404/mihomo-party&#34;&gt;mihomo-party&lt;/a&gt;: Mihomo GUI&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;个人观点：tauri是webview+rust的实现，性能和打包的体积比较小，但是rust门槛高，tauri的生态可能比不上node。Electron是Chrome内核和NodeJS，入门门槛低，而且node的生态比较好。再不在乎包体积和性能的情况下，还是推荐Electron。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h1 id=&#34;移动客户端&#34;&gt;移动客户端&lt;/h1&gt;&#xA;&lt;h2 id=&#34;flutter&#34;&gt;Flutter&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/guozhigq/pilipala&#34;&gt;pilipala&lt;/a&gt;: 第三方bilibili客户端&#xA;&lt;ul&gt;&#xA;&lt;li&gt;使用Get做状态管理&lt;/li&gt;&#xA;&lt;li&gt;使用Hive做本地存储&lt;/li&gt;&#xA;&lt;li&gt;封装了dio网络请求&lt;/li&gt;&#xA;&lt;li&gt;基于media-kit实现视频播放&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/jameskokoska/Cashew&#34;&gt;Cashew&lt;/a&gt;: An app created to help users manage a budget and purchases&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/AIYO77/flutter_cloud_music&#34;&gt;flutter_cloud_music&lt;/a&gt;: 还原网易云，flutter SDK版本较低，依赖包有些缺乏维护&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/Davies-K/Taskez&#34;&gt;Taskez&lt;/a&gt;: A Productivity Mobile Application UI kit built with Flutter&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/abuanwar072/E-commerce-Complete-Flutter-UI&#34;&gt;E-commerce-Complete-Flutter-UI&lt;/a&gt;: 学习skleton&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/chen08209/FlClash&#34;&gt;Flclash&lt;/a&gt;: 基于ClashMeta的客户端。&#xA;&lt;ul&gt;&#xA;&lt;li&gt;cgo&lt;/li&gt;&#xA;&lt;li&gt;ffi&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;web前端&#34;&gt;Web前端&lt;/h1&gt;&#xA;&lt;h2 id=&#34;react&#34;&gt;React&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/mayneyao/eidos&#34;&gt;eidos&lt;/a&gt;: 类似notion的软件&#xA;&lt;ul&gt;&#xA;&lt;li&gt;使用zustand做状态管理&lt;/li&gt;&#xA;&lt;li&gt;能够了解到PWA、serivce-woker、web-worker等&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/AykutSarac/jsoncrack.com&#34;&gt;jsoncrack.com&lt;/a&gt;: json可视化展示&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/huanghanzhilian/c-shopping&#34;&gt;c-shopping&lt;/a&gt;: 基于&lt;code&gt;Next.js&lt;/code&gt;的全栈购物网站&#xA;&lt;ul&gt;&#xA;&lt;li&gt;使用 &lt;code&gt;mongoose&lt;/code&gt; 操作数据库&lt;/li&gt;&#xA;&lt;li&gt;学习 nextjs 的 Route Handlers 的使用&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/noodle-run/noodle&#34;&gt;noodle&lt;/a&gt;: Rethinking Student Productivity&#xA;&lt;ul&gt;&#xA;&lt;li&gt;学习在nextjs中使用trpc&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/steven-tey/novel&#34;&gt;novel&lt;/a&gt;: 基于Tiptap实现的编辑器&#xA;&lt;ul&gt;&#xA;&lt;li&gt;tiptap插件编写&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;后端&#34;&gt;后端&lt;/h1&gt;&#xA;&lt;h2 id=&#34;golang&#34;&gt;Golang&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/MetaCubeX/mihomo&#34;&gt;mihomo&lt;/a&gt;: 翻墙软件，ClashMeta&#xA;&lt;ul&gt;&#xA;&lt;li&gt;能够学习到各种翻墙协议的内容&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/hibiken/asynq&#34;&gt;asynq&lt;/a&gt;: 基于Redis实现的分布式任务&#xA;&lt;ul&gt;&#xA;&lt;li&gt;redis lua脚本的使用&lt;/li&gt;&#xA;&lt;li&gt;golang 多个sever的启动与停止的实现&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/jech/galene&#34;&gt;galene&lt;/a&gt;: The Galène videoconference server&#xA;&lt;ul&gt;&#xA;&lt;li&gt;了解WebRTC相关的指示&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/dgraph-io/badger&#34;&gt;badger&lt;/a&gt;: KV存储引擎&#xA;&lt;ul&gt;&#xA;&lt;li&gt;能够学习到LSM树的实现&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;rust&#34;&gt;Rust&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/ducaale/xh&#34;&gt;xh&lt;/a&gt;: 类似于&lt;code&gt;curl&lt;/code&gt;的命令行请求工具&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;数据分析与机器学习&#34;&gt;数据分析与机器学习&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/ageron/handson-ml3&#34;&gt;handson-ml3&lt;/a&gt;: Hands-on Machine Learning with Scikit-Learn, Keras and TensorFlow (3rd edition)&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/MLEveryday/100-Days-Of-ML-Code&#34;&gt;100-Days-Of-ML-Code&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>开源项目推荐【持续更新】</title>
      <link>https://carlos19960601.github.io/posts/%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE%E6%8E%A8%E8%8D%90/</link>
      <pubDate>Mon, 01 Jul 2024 16:53:15 +0800</pubDate>
      <guid>https://carlos19960601.github.io/posts/%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE%E6%8E%A8%E8%8D%90/</guid>
      <description>&lt;ol&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/Bowen7/react-rough-fiber&#34;&gt;react-rough-fiber&lt;/a&gt;: 渲染手绘风 SVG 的 React 渲染器，可以轻松把 SVG 转换成手绘风图片&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://carlos19960601.github.io/%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE%E6%8E%A8%E8%8D%90/react-rough-fiber.png&#34; alt=&#34;react-rough-fiber&#34;&gt;&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
